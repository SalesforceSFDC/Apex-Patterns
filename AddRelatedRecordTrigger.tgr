// This trigger adds a related opportunity for each new or updated account 
// if no opportunity is already associated with the account. 
// The trigger first performs a SOQL query to get all child opportunities 
// for the accounts that the trigger fired on.
// The trigger iterates over the list of sObjects in `Trigger.New` to get each account sObject.
// If the account doesnâ€™t have any related opportunity sObjects, the for loop creates one.
// If the trigger created any new opportunities, the final statement inserts them.
trigger AddRelatedRecord on Account(after insert, after update) {
    List<Opportunity> oppList = new List<Opportunity>();

    // Get the related opportunities for the accounts in this trigger
    Map<Id, Account> acctsWithOpps = new Map<Id, Account> (
        [SELECT Id, (SELECT Id FROM Opportunities) FROM Account WHERE Id IN :Trigger.New]
    );

    // Add an opportunity for each account if it doesn't already have one.
    // Iterate through each account.
    for(Account a :Trigger.New) {
        System.debug('acctsWithOpps.get(a.Id).Opportunities.size()=' + acctsWithOpps.get(a.Id).Opportunities.size());

        // Check if the account already has a related opportunity.
        if (acctsWithOpps.get(a.Id).Opportunities.size() == 0) {
            // Check if the account already has a related opportunity.
            oppList.add(new Opportunity(Name = a.Name + ' Opportunity',
                                    StageName = 'Prospecting',
                                    CloseDate = System.today().addMonths(1),
                                    AccountId = a.Id));
        }
    }
    if(oppList.size() > 0) {
        insert oppList;
    }
}
